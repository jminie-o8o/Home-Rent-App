buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.nextsquad'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.auth0:java-jwt:3.19.2'

	// webclient dns
//	runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.77.Final:osx-aarch_64'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.lettuce:lettuce-core:6.1.9.RELEASE'
	implementation 'redis.clients:jedis:4.2.3'

	implementation group: 'com.google.code.gson', name: 'gson'

	//s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//query dsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	//restdocs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

	//validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	testLogging {
		events "failed"
		exceptionFormat "full"
	}
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
	sourceDir file('src/docs/asciidoc')
	sources {
		include 'index.adoc'
	}
	outputDir file('build/docs/asciidoc')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn test
	dependsOn asciidoctor
}

jar {
	enabled = false
}

bootJar {
	archivesBaseName = 'app'
	archiveFileName = 'app.jar'
	archiveVersion = "0.0.0"
}

//querydsl
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

